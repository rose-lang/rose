{
  "name": "Rose",
  "scopeName": "source.rose",
  "fileTypes": [".rose"],
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#identifiers"
    },
    {
      "include": "#literals"
    },
    {
      "include": "#punctuation"
    },
    {
      "include": "#operators"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.number-sign.rose",
          "match": "#.*$"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.rose",
          "match": "\\b(else|from|if|pub|then|use)\\b"
        },
        {
          "name": "keyword.other.rose",
          "match": "\\b(and|in|or)\\b"
        },
        {
          "name": "storage.type.rose",
          "match": "\\b(class|def|infix|infixl|infixr|instance|let|type|val)\\b"
        }
      ]
    },
    "identifiers": {
      "patterns": [
        {
          "name": "support.type.primitive.rose",
          "match": "\\b(bool|f32|f64|i32|i64|u32|u64)\\b"
        },
        {
          "name": "entity.name.type.rose",
          "match": "\\b([A-Z]\\w*)\\b"
        },
        {
          "name": "constant.language.rose",
          "match": "\\b(false|true)\\b"
        },
        {
          "name": "variable.other.rose",
          "match": "\\b(\\w+)\\b"
        }
      ]
    },
    "literals": {
      "patterns": [
        {
          "name": "constant.numeric.rose",
          "match": "\\b[0-9]+\\b"
        },
        {
          "name": "string.quoted.double.rose",
          "match": "\"([^\"\\\\]|\\\\.)*\""
        }
      ]
    },
    "punctuation": {
      "patterns": [
        {
          "name": "punctuation.rose",
          "match": "[\\(\\)\\[\\]\\{\\},\\.]"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.rose",
          "match": "[^\\s#\\w\\d\"\\(\\)\\[\\]\\{\\},\\.]+"
        }
      ]
    }
  }
}
